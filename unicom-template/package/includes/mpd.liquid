{% comment %}GET all MPDs from the Bundle - the resource inside each entry{% endcomment %}
{% assign mpdr = bundle.entry | where: "resource.resourceType", "MedicinalProductDefinition" | first %}
{% assign mpd = mpdr.resource %}
  <div class="container rcorners mpd">
  {% comment %}print the name - current name[0], should be all names{% endcomment %}
  <h4>
    {{ mpd.name[0].productName }}
  </h4>
  {% comment %}and name parts{% endcomment %}
  {% for part in mpd.name[0].part %}
    <p>
      {{ part.type.coding[0].display }}:
      <b>
        {{ part.part }}
      </b>
    </p>
  {% endfor %}
  {% comment %}and MPD identifiers{% endcomment %}
  {% for pid in mpd.identifier %}
    {{ pid.system | split: '/' | last | upcase }}:
    <b>
      {{ pid.value }}
    </b>
  {% endfor %}

  {% comment %}for each name (currently [0] but should be all) print the languages{% endcomment %}
  {% comment %}FIX{% endcomment %}
  {% if mpd.name[0].usage %}
    <div>
      {% for lang in mpd.name[0].usage %}
        <p>
          Country:
          <b>
            {{ lang.country.coding[0].display }}
          </b>
        </p>
        <p>
          Language:
          <b>
            {{ lang.language.coding[0].display }}
          </b>
        </p>

      {% endfor %}
    </div>
  {% endif %}
  {% comment %}print status and domain{% endcomment %}
  <div>
    <p>
      status: {{ mpd.status.coding[0].display }}
    </p>
  </div>
  <div>
    <p>
      Domain: {{ mpd.domain.coding[0].display }}
    </p>
  </div>
  {% comment %}print combined dose form - if there's many, this should be adjusted{% endcomment %}
  <div>
    <p>
      Combined pharmaceutical dose form: {{ mpd.combinedPharmaceuticalDoseForm.coding[0].display }}
    </p>
  </div>
  <div>
    <p>
      Legal Status of Supply: {{ mpd.legalStatusOfSupply.coding[0].display }}
    </p>
  </div>

  {% comment %}print mpd classification{% endcomment %}
  <div class="container rcorners classif listcontainer">
    <div class="container rcorners classif">
      {% for classif in mpd.classification %}
        {% for class in classif.coding %}
          {{ class.display }} ({{ class.code }}) <br/>
        {% endfor %}
      {% endfor %}
    </div>
  </div>

  {% comment %}Get all RAs (RegAuthorization) from the Bundle{% endcomment %}
  {% assign ras = bundle.entry | where: "resource.resourceType", "RegulatedAuthorization" %}

    {% for rar in ras %}
    {% comment %}get the RA resource{% endcomment %}
    {% assign ra = rar.resource %}
    {% comment %}mpdtid = mpd prepended ID - will be "MedicinalProductDefinition/<id>" identifiers{% endcomment %}
    {% assign mpdtid = mpd.id | prepend: 'MedicinalProductDefinition/' %}
    {% comment %}if the current looped RA points to the MPD as subject{% endcomment %}
    {% if ra.subject[0].reference == mpdtid %}
      {% include regauth.liquid ra=ra %}

    {% endif %}
  {% endfor %}

  {% comment %}
  Generic way to iterate a linked structure
  {% assign ras = bundle.entry | where: "resource.resourceType","RegulatedAuthorization"%}
  {% assign rasf = ras | where: "subject[0].reference", mpd.id | prepend: 'MedicinalProductDefinition/' %}
  {% for rar in rasf %}
  {% assign ra = rar.resource %}

  {% endfor %}
  {% endcomment %}

  {% comment %}Get PPDs from Bundle {% endcomment %}
  {% assign ppds = bundle.entry | where: "resource.resourceType", "PackagedProductDefinition" %}
    {% for ppdr in ppds %}
    {% assign ppd = ppdr.resource %}
    {% comment %}Get PPDs that link to MPD, via packagefor[0] {% endcomment %}
    {% comment %}SHOULD FIX: Currently only packageFor[0], but should be any package {% endcomment %}
    {% assign mpdtid = mpd.id | prepend: 'MedicinalProductDefinition/' %}
    {% comment %}FIX{% endcomment %}
      {% for ppdpackageFor in ppd.packageFor %}
        {% if ppdpackageFor.reference == mpdtid %}
          <div class="container rcorners bleft listcontainer"> <p class="divtitle">
            Package {{ forloop.index }} of {{ ppds | size }}</p>
          {% include ppd.liquid ppd=ppd %}
        </div>


      {% endif %}
    {% endfor %}
  {% endfor %}

  {% comment %}
  {% assign ppds = bundle.entry | where: "resource.resourceType","PackagedProductDefinition"%}

  {% for ppdr in ppds %}
  {% assign ppd = ppdr.resource %}

  Package {{forloop.index}} of {{ ppds | size }}
  {% if ppd.packageFor[0].reference == mpd.id | prepend: 'MedicinalProductDefinition/' %}
  <div
  class="container   rcorners ppd">
  </div>
  {% endif %}
  {% endfor %}
  {% endcomment %}
  {% comment %}Get AdminProdDefs from Bundle {% endcomment %}

  {% assign apds = bundle.entry | where: "resource.resourceType", "AdministrableProductDefinition" %}

  {% if apds %}
    <div class="container rcorners apd listcontainer">

      {% for apdr in apds %}
        {% assign apd = apdr.resource %}
        {% assign mpdtid = mpd.id | prepend: 'MedicinalProductDefinition/' %}
        {% comment %}Do this only if the APD-formOf links to the MPD {% endcomment %}
        {% comment %}FIX - currently only [0], should be  any{% endcomment %}
          {% if apd.formOf[0].reference == mpdtid %}

        {% include apd.liquid apd=apd %}

      {% endif %}
    {% endfor %}
  </div>
{% endif %}</div>